@page "/LearnBlazor/BindProp"

<div class="container mt-4">
    <h2 class="text-center text-primary mb-4">Product - Data Binding</h2>

    <div class="row">
        <!-- Product Playground -->
        <div class="col-lg-6 col-md-12 mb-4 d-flex">
            <div class="product-playground bg-light p-4 rounded shadow flex-fill">
                <h4 class="text-secondary border-bottom pb-2 mb-3">Product Playground</h4>

                <div class="form-group">
                    <!-- Checkbox binding -->
                    <label class="font-weight-bold">IsActive:</label>
                    <input type="checkbox" @bind="@Product.IsActive" class="form-check-input ml-2" />
                </div>

                <div class="form-group">
                    <!-- Number input binding -->
                    <label class="font-weight-bold">Input Price:</label>
                    <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" class="form-control" />
                </div>

                <div class="form-group">
                    <!-- Select binding -->
                    <label class="font-weight-bold">Product Properties:</label>
                    <select @bind="SelectedProp" class="form-control">
                        @foreach (var prop in Product.ProductProperties)
                        {
                            <option value="@prop.Key">@prop.Key</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <!-- Product Summary -->
        <div class="col-lg-6 col-md-12 mb-4 d-flex">
            <div class="product-summary bg-light p-4 rounded shadow flex-fill">
                <h4 class="text-secondary border-bottom pb-2 mb-3">Product Summary</h4>

                <p>ID: <span class="font-weight-bold">@Product.Id</span></p>
                <p>Name: <span class="font-weight-bold">@Product.Name</span></p>
                <p>IsActive: <span class="font-weight-bold">@Product.IsActive</span></p>
                <p>
                    The Product is:
                    <span class="badge @(Product.IsActive ? "badge-success" : "badge-danger")">
                        @(Product.IsActive ? "Active" : "InActive")
                    </span>
                </p>
                <p>Price: <span class="font-weight-bold">@Product.Price</span></p>

                @if (!string.IsNullOrEmpty(SelectedProp))
                {
                    <p>Selected Property: <span class="font-weight-bold">@SelectedProp</span></p>
                    <p>
                        Selected Value:
                        <span class="text-info">
                            @Product.ProductProperties.FirstOrDefault(u => u.Key == SelectedProp)?.Value
                        </span>
                    </p>
                }
            </div>
        </div>
    </div>

    <!-- Product Table -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="bg-light p-4 rounded shadow">
                <h2 class="text-success text-center mb-4">Product Table</h2>
                <table class="table table-hover table-bordered table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th scope="col">Product Name</th>
                            <th scope="col">Price</th>
                            <th scope="col">Is Active</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prod in ProductList)
                        {
                            <tr>
                                <td><input type="text" @bind="prod.Name" @bind:event="oninput" class="form-control" /></td>
                                <td><input type="text" @bind="prod.Price" @bind:event="oninput" class="form-control" /></td>
                                <td class="text-center">
                                    <input type="checkbox" @bind="prod.IsActive" class="form-check-input" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Summary of Products -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="bg-light p-4 rounded shadow">
                <h2 class="text-secondary mb-4">Summary of Products</h2>
                @foreach (var prod in ProductList)
                {
                    <div class="d-flex align-items-center mb-3 p-2 border-bottom">
                        <div class="flex-grow-1">
                            <h5 class="mb-1">
                                <strong class="text-primary">@prod.Name</strong>
                                <span class="text-muted">[@prod.Price]</span>
                            </h5>
                        </div>
                        <div class="ml-3">
                            <span class="badge @(prod.IsActive ? "bg-success" : "bg-danger") p-2">
                                @(prod.IsActive ? "Active" : "Inactive")
                            </span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string SelectedProp = "";

    Models.Product Product = new()
        {
            Id = 1,
            Name = "Product 1",
            IsActive = true,
            Price = 100,
            ProductProperties = new List<Product_Prop>()
        {
            new Product_Prop { Id = 1, Key = "Color", Value = "Red" },
            new Product_Prop { Id = 2, Key = "Height", Value = "50px" },
            new Product_Prop { Id = 3, Key = "Background", Value = "Transparent" }
        }
        };

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new Models.Product
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 250,
                ProductProperties = new List<Product_Prop>
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose" },
                new Product_Prop { Id = 2, Key = "Size", Value = "20oz" },
                new Product_Prop { Id = 3, Key = "Color", Value = "Purple" }
            }
            });

        ProductList.Add(new Models.Product
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 300,
                ProductProperties = new List<Product_Prop>
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop { Id = 3, Key = "Color", Value = "White" }
            }
            });
    }
}
